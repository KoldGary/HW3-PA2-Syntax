# Lexical specification
token SKIP 'skip'
token TOKEN 'token'
token NAME '[A-Z][A-Z0-9_]*'
token PATTERN '\'.*?\''
token COMMENT '#.*'
token NEWLINE '\n+'
skip WHITESPACE '\s+'

%
# Syntactic specification
<spec>:Spec ::= <lines>
<lines> ::= <line> <lines> | <line>
<line> ::= <comment> | <rule>
<comment>:Comment ::= COMMENT
<rule> ::= <skip_rule> | <token_rule>
<skip_rule>:SkipRule ::= SKIP NAME PATTERN
<token_rule>:TokenRule ::= TOKEN? NAME PATTERN

%
# Semantic specification
<spec>.pp = <lines>.pp

<lines>.pp = <line>.pp + "\n" + <lines>[1].pp
<lines>[1].pp = ""           # handles end of recursion

<line>.pp = <comment>.pp | <rule>.pp
<comment>.pp = ""            # skip c
